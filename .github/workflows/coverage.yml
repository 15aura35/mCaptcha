name: Coverage

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version:
          # - stable
          - 1.51.0

    name: ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mcaptcha-redis:
        image: mcaptcha/cache
        ports:
          - 6379:6379
            #      smtp:
            #        image: maildev/maildev
            #        ports:
            #          - 10025:1025
            #          - 1080:1080
            #        env:
            #          MAILDEV_INCOMING_USER: admin
            #          MAILDEV_INCOMING_PASS: password

    steps:
      - uses: actions/checkout@v2
      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            node_modules
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: start smtp server
        run: docker run -d -p 1080:1080 -p 10025:1025  maildev/maildev --incoming-user admin --incoming-pass password

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build frontend
        run: make frontend

      - name: Run the frontend tests
        run: make frontend-test

      - name: Run migrations
        run: make migrate
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/postgres

      - name: build frontend
        run: make frontend

      - name: Generate coverage file
        if: matrix.version == '1.51.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: '-t 1200'
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/postgres
          # GIT_HASH is dummy value. I guess build.rs is skipped in tarpaulin
          # execution so this value is required for preventing meta tests from
          # panicking
          GIT_HASH: 8e77345f1597e40c2e266cb4e6dee74888918a61
          OPEN_API_DOCS: 8e77345f1597e40c2e266cb4e6dee74888918a61
          CACHE_BUSTER_FILE_MAP: '{"map":{"./static/bundle/main.js":"./prod/bundle/main.1417115E59909BE0A01040A45A398ADB09D928DF89CCF038FA44B14850442096.js"},"base_dir":"./prod"}'
          COMPILED_DATE: "2021-07-21"

      - name: Upload to Codecov
        if: matrix.version == '1.51.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        uses: codecov/codecov-action@v1
